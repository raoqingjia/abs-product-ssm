<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:component-scan base-package="com.bboss.product.**"></context:component-scan>
	<mvc:annotation-driven />
	<!-- WEB 应用服务器默认的 Servlet 处理，从而找到对应的静态资源 -->
	<mvc:default-servlet-handler />
	<!-- 注册视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 视图资源url的前缀 -->
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<!-- 视图资源url的后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>


	<util:properties id="cfg" location="classpath:dbconfig.properties" />
	<!--配置DruidDataSource连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" init-method="init" lazy-init="true">
		<property name="driverClassName" value="#{cfg.driver}" />
		<property name="url" value="#{cfg.url}" />
		<property name="username" value="#{cfg.username}" />
		<property name="password" value="#{cfg.password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/bboss/product/dao/impl/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- Mapper接口所在包，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com/bboss/product/dao/interfaces" />
	</bean>


	<!-- 配置请求拦截器 -->
	<!-- <mvc:interceptors> 多个interceptor可以形成一个拦截链，从上到下每一个interceptor都拦截后才会放行请求 
		如果是多个拦截链会不会影响请求速度 <mvc:interceptor> /** 表示对所有的请求借口路径都进行拦截 <mvc:mapping path="/**"></mvc:mapping> 
		exclude-mapping 表示当前这个路径不需要拦截 <mvc:exclude-mapping path="/**/login"></mvc:exclude-mapping> 
		<bean class="com.project.intercept.PageIntercept"></bean> </mvc:interceptor> 
		</mvc:interceptors> -->
</beans>




